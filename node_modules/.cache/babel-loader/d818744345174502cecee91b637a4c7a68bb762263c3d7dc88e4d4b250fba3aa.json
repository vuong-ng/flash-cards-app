{"ast":null,"code":"var _jsxFileName = \"/Users/vuongnguyen/Documents/GitHub/flash-cards-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n// useEffect to make sure calling API as soon as the page loads\nimport FlashcardList from './FlashcardList';\nimport './app.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS);\n  const categoryEl = useRef();\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php').then(res => {\n      console.log(res.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://opentdb.com/api.php?amount=10').then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer);\n        const options = [...questionItem.incorrect_answers.map(a => decodeString(a)), answer];\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - .5)\n        };\n      }));\n    });\n  }, []);\n  function decodeString(str) {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"header\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlForm: \"category\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"category\",\n          ref: categoryEl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(FlashcardList, {\n        flashcards: flashcards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"4pWEj/5ia3UsA73lHwgX7Xu+ZvM=\");\n_c = App;\nexport default App;\nconst SAMPLE_FLASHCARDS = [{\n  id: 1,\n  question: \"Question 1 ?\",\n  answer: \"4\",\n  options: ['2', '3', '4', '5']\n}, {\n  id: 2,\n  question: \"Question 2 ?\",\n  answer: \"Answer\",\n  options: ['Opt 1', 'Opt 2', 'Opt 3', 'Opt 4']\n}];\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FlashcardList","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","flashcards","setFlashcards","SAMPLE_FLASHCARDS","categoryEl","get","then","res","console","log","data","results","map","questionItem","index","answer","decodeString","correct_answer","options","incorrect_answers","a","id","Date","now","question","sort","Math","random","str","textArea","document","createElement","innerHTML","value","handleSubmit","e","preventDefault","children","class","onSubmit","className","htmlForm","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/vuongnguyen/Documents/GitHub/flash-cards-app/src/App.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\n// useEffect to make sure calling API as soon as the page loads\nimport FlashcardList from './FlashcardList';\nimport './app.css'\nimport axios from 'axios'\n\nfunction App() {\n    const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS)\n    const categoryEl = useRef()\n    useEffect(() => {\n      axios\n        .get('https://opentdb.com/api_category.php')\n        .then(res => {\n          console.log(res.data)\n        })\n    }, [])\n    \n    useEffect(() => {\n      axios\n        .get('https://opentdb.com/api.php?amount=10')\n        .then(res => {\n          setFlashcards(res.data.results.map((questionItem,index) => {\n            const answer = decodeString(questionItem.correct_answer)\n            const options = [...questionItem.incorrect_answers.map(a => decodeString(a)), \n              answer]\n            return {\n              id: `${index}-${Date.now()}`,\n              question: decodeString(questionItem.question),\n              answer: answer,\n              options: options.sort(() => Math.random() - .5)\n            }\n          }))\n        })\n    },[])\n    function decodeString(str) {\n      const textArea = document.createElement('textarea')\n      textArea.innerHTML=str\n      return textArea.value\n    }\n  function handleSubmit(e){\n    e.preventDefault();\n  }\n\n  return (\n    <>\n    <form class='header' onSubmit={handleSubmit}>\n      <div className='form-group'>\n        <label htmlForm='category'>Category</label>\n        <select id='category' ref={categoryEl}>\n\n        </select>\n\n      </div>\n    </form>\n    <div className='container'>\n    <FlashcardList flashcards={flashcards} />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n \nconst SAMPLE_FLASHCARDS = [\n    {\n        id: 1,\n        question: \"Question 1 ?\",\n        answer: \"4\",\n        options: [\n        '2',\n        '3',\n        '4',\n        '5',]\n    },\n    {\n        id: 2,\n        question: \"Question 2 ?\",\n        answer: \"Answer\",\n        options: [\n        'Opt 1',\n        'Opt 2',\n        'Opt 3',\n        'Opt 4',]\n    }\n]\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}