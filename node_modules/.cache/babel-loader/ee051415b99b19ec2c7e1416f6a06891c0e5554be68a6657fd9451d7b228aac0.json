{"ast":null,"code":"var _jsxFileName = \"/Users/vuongnguyen/Documents/GitHub/flash-cards-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n// useEffect to make sure calling API as soon as the page loads\nimport FlashcardList from './FlashcardList';\nimport './app.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS);\n  const [categories, setCategories] = useState([]);\n  const categoryEl = useRef();\n  const amountEl = useRef();\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php').then(res => {\n      setCategories(res.data.trivia_categories);\n    });\n  }, []);\n  useEffect(() => {}, []);\n  function decodeString(str) {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios.get('https://opentdb.com/api.php').then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer);\n        const options = [...questionItem.incorrect_answers.map(a => decodeString(a)), answer];\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - .5)\n        };\n      }));\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"header\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"category\",\n          ref: categoryEl,\n          children: categories.map(category => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.id,\n              children: category.name\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Number Of Qeustions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount\",\n          min: \"1\",\n          step: \"1\",\n          defaultValue: 10,\n          ref: amountEl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(FlashcardList, {\n        flashcards: flashcards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ZCeV51f8lLkvXJCyDYu8qc9rdB0=\");\n_c = App;\nexport default App;\nconst SAMPLE_FLASHCARDS = [{\n  id: 1,\n  question: \"Question 1 ?\",\n  answer: \"4\",\n  options: ['2', '3', '4', '5']\n}, {\n  id: 2,\n  question: \"Question 2 ?\",\n  answer: \"Answer\",\n  options: ['Opt 1', 'Opt 2', 'Opt 3', 'Opt 4']\n}];\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FlashcardList","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","flashcards","setFlashcards","SAMPLE_FLASHCARDS","categories","setCategories","categoryEl","amountEl","get","then","res","data","trivia_categories","decodeString","str","textArea","document","createElement","innerHTML","value","handleSubmit","e","preventDefault","results","map","questionItem","index","answer","correct_answer","options","incorrect_answers","a","id","Date","now","question","sort","Math","random","children","class","onSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","category","name","type","min","step","defaultValue","_c","$RefreshReg$"],"sources":["/Users/vuongnguyen/Documents/GitHub/flash-cards-app/src/App.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\n// useEffect to make sure calling API as soon as the page loads\nimport FlashcardList from './FlashcardList';\nimport './app.css'\nimport axios from 'axios'\n\nfunction App() {\n    const [flashcards, setFlashcards] = useState(SAMPLE_FLASHCARDS)\n    const [categories, setCategories] = useState([])\n\n    const categoryEl = useRef()\n    const amountEl = useRef()\n    useEffect(() => {\n      axios\n        .get('https://opentdb.com/api_category.php')\n        .then(res => {\n          setCategories(res.data.trivia_categories)\n        })\n    }, [])\n    \n    useEffect(() => {},[])\n    function decodeString(str) {\n      const textArea = document.createElement('textarea')\n      textArea.innerHTML=str\n      return textArea.value\n    }\n  function handleSubmit(e){\n    e.preventDefault()\n    axios\n        .get('https://opentdb.com/api.php')\n        .then(res => {\n          setFlashcards(res.data.results.map((questionItem,index) => {\n            const answer = decodeString(questionItem.correct_answer)\n            const options = [...questionItem.incorrect_answers.map(a => decodeString(a)), \n              answer]\n            return {\n              id: `${index}-${Date.now()}`,\n              question: decodeString(questionItem.question),\n              answer: answer,\n              options: options.sort(() => Math.random() - .5)\n            }\n          }))\n        })\n  }\n\n  return (\n    <>\n    <form class='header' onSubmit={handleSubmit}>\n      <div className='form-group'>\n        <label htmlFor='category'>Category</label>\n        <select id='category' ref={categoryEl}>\n          {categories.map(category => {\n            return <option value={category.id} key={category.id}>{category.name}</option>\n          })}\n        </select>\n      </div>\n      <div className='form-group'>\n        <label htmlFor='amount'>Number Of Qeustions</label>\n        <input type='number' id='amount' min='1' step='1' defaultValue={10} ref={amountEl}/>\n      </div>\n      <div className='form-group'>\n        <button className='btn'>Generate</button>\n      </div>\n    </form>\n    <div className='container'>\n    <FlashcardList flashcards={flashcards} />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n \nconst SAMPLE_FLASHCARDS = [\n    {\n        id: 1,\n        question: \"Question 1 ?\",\n        answer: \"4\",\n        options: [\n        '2',\n        '3',\n        '4',\n        '5',]\n    },\n    {\n        id: 2,\n        question: \"Question 2 ?\",\n        answer: \"Answer\",\n        options: [\n        'Opt 1',\n        'Opt 2',\n        'Opt 3',\n        'Opt 4',]\n    }\n]\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}